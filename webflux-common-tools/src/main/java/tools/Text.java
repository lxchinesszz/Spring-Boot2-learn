package tools;

/**
 * 选择什么编程语言？如何入门Java? 入门基础是什么? 学好的前提是什么？怎样才能学好？
 * 最近一直有同学问我怎么学Java,怎么学好Java，学Java能干什么。其实小编关于这些问题也有些自己的看法和学习的路径
 * 在这里我把自己的经历分享出来,希望给一些还没入行或者是刚入行的童鞋一些建议。注意不是鸡汤!不是鸡汤!不是鸡汤!
 * 本文主要分享对象为开发人员。文采有限,还望见谅。
 *
 * 还是小编的写作风格,首先提出问题,然后分析问题,最后解决问题。
 *选择编程语言:
 *  小编发现喜欢编程的同学,其实都是具有创造力的,希望创造出一些有用的东西,或者说是想扮酷,像电影中黑客那样,键盘操作者黑色的命令行拯救世界。比如这样
 *  不要想多这里小编只是用python写了一个分析日志的脚本而已，不会毁灭世界。
 *  好回到正题,作为还未入行的同学,刚毕业的大学生怎么选择编程语言呢？
 *  小编建议选择的时候要慎重,着重思考下,你是思考型人才的还是样貌协会的,你是喜欢后端思考型还是选择前端做炫酷页面呢？
 *  两者同样有技术难度,不存在编程难度的问题,不过相对来说前端需要学的东西比较少一点,因为只涉及到页面展示所以css样式记得比较多。
 *  而后端要学习数据库,ORM框架通信框架等等。还有对网络知识有一个良好的基础。后端比较枯燥思考的比较多和数据打交道,就是对数据进行加工处理
 *  不过从长远来看,小编觉得后端的发展潜力比前端稍微好点,可以做一个比喻。如果前端比作一个人的样貌，那么后端肯定就是一个人的大脑。前端数据也是根据
 *  后端返回的数据来展示的。 如果你想以后做一点什么？比如要写一个自己的网站,或者说走大数据，人工智能，物联网的方向。那就不用思考了，选择后端
 *  没错。如果是你喜欢炫酷的页面,炫酷的动画,或者更极端点想你不喜欢这行,只是想赚两年钱,那也不要犹豫了，选择前端没错.
 *
 *  小编在18岁前属于后者选择前端,18岁后前者选择后端,为什么之前选择前端呢？在读初中时候,当时QQ刚开始流行,因为年纪比较小喜欢好看的东西，
 *  小编喜欢QQ会员的动态炫酷头像,喜欢把QQ空间装扮的炫酷闪亮。而因为没有零花钱,只有一台电脑。于是小编当时自学的Ps和Flash,可能是因为年纪小的缘故
 *  当时学得快(实用性技巧比较多,但是不全面),Flash做动画（准确的说是用闪客把网上下载的动态Flash破解并加入自己的元素）,因为后来读高中了，没有了电脑。最后就不玩了
 *  而小编在读高中时候正是3Q大战,小米创业的年代,深受物联网的影响,所以选择了后端。其实小编选择的第一门语言是Php但是接触最早的语言是Java
 *  90后的同学可能都知道,在我们那个年代手机都是MTK,那时候所说的山寨机，当时下载游戏都是下载的Jar包，安装的，当时MTK手机可以运行Java开发的游戏。
 *  现在思考起来这应该是我最早接触Java语言吧。但是为什么小编第一门语言是Php呢？因为听说Php是世界上最好的语言,难度低，类库全。所以小编大学之处选择
 *  自学的是Php。后来因为专业课是讲Java的缘故就把Php忘掉了(其实小编是不太喜欢php的变量命名方式)
 *
 *  如何学习Java呢?
 *  小编刚开始是自学Java当时听的是传智播客刘意老师讲的java基础，时间非常长，看玩大概需要1个月。小编是利用大学晚上和空闲时间看的，暑假也在家看。
 *  看视频特容易犯困,小编我总是看睡着，但是就是这样我把视频看了3遍，并且在书上做了很多笔记,到现在我的书还跟着我,因为这是我的启蒙书籍(至于是什么书,不告诉你,免得说我做广告。就是我们学校发的书)。
 *  说这些是什么意思呢？想告诉你两点:
 *  1. 熟能生巧,不懂就多看,多记。
 *  2. 作为一个大学生要能因为自己的爱好去坚持点什么(如果连自己喜欢的东西都坚持不了,那还能坚持写什么?虽然有点鸡汤的味道,但是不错)
 *
 *  Java基础是什么?(只提到,可以百度详细)
 *  1. Java基础语法
 *       Class是什么? 数据类型 int long double byte 基础语法 if for while break
 *  2. Java集合类型
 *       Map Set List Queue的实现类... 可以自己百度
 *  3. Java异常处理
 *       Exception的体系运行异常和非运行异常
 *
 *  学好的前提?
 *
 *  编程学好的前提是充分领会到编程的思想,所谓的编程思想就是万物皆对象. 面向对象编程(面向女朋友编程)，这点你可能还不懂,但是注意这点
 *  你一定要懂。当你懂了之后再学习一门新的计算机语言,只要一周就可以上手!或者更短。小编Python和node入门时间均不到一周。学习顺序和Java一样
 *  先学语法,然后数据类型,然后异常。
 *
 *  其次当你在入门的过程中，你可能会遇到这种情况,基础也会了，但是不知道能干什么了？这个时候你急需做个项目来练练手,那么可以找这个Javaweb项目来练练手
 *  当我们选择了学习Java,那么我们思考作为一个后端语言怎么和前端交互呢？肯定是通信
 *  计算机如何通信呢？ 通过网络 ！ 网络是如何交互呢？ 这个时候我们要学习Http协议和tcp协议。什么是Http协议呢，在Java中可以通过Http的客户端
 *  HttpClient发送请求。在网络交互这块,你不得不学学OSI网络模型，他包含了计算机的网络通信所有协议。即计算机是如何将数据转换成电信号,
 *  电信号又是如何转换成人可以看懂的数据。 这块知识概念性知识点比较多，小编也不是全都掌握,但是大概都了解。别看这大概都了解几个字,你知道和不知道
 *  的差距会在后期学习各种服务器知识的时候有非常大的用处,这点其实就是科班出身和非科班出身的区别了,就是说为什么企业都不喜欢从培训班毕业出来的同学了
 *  不过如果你不是科班出身,也没关系,只要你热爱这个行业,知识是可以补的。其实小编也不是科班出身,小编大学学习的电子商务(属于商务+计算机两块学习)
 *  不出你所料,小编只喜欢计算机,OSI网络模型这写是在大学图书馆学习。书名忘记了只记得好像是一个日本人写的分为上下两卷。这点事想告诉你
 *  只要热爱,就不要放弃! 你一定要学习
 *  1. 计算机基础知识 (冯诺依曼计算机模型)
 *  2. 网络基础知识 (OSI 网络模型+搜一些网络课)
 *      我那时看的是复旦大学一个老师讲的网络课,很多课时,小编是跳着看的。
 *
 *  最后小编还想告诉你?
 *
 *  往往我们在学习东西的时候,很容易会失去兴趣,小编觉得是因为在学习的时候1是枯燥2是因为短期学习，看不到什么收获所以导致容易放弃。
 *  当时从小编的经历告诉你,你学习到的东西,在将来一定会对你很有用。
 *
 *  学习方法?
 *
 *  1. 多做笔记(把工作中遇到的坑,和今天学会到的知识点记下来)
 *      另外如果你真是培训班里学习,或者说准备报一个培训班,你更应该做笔记,因为现在培训班学费不低20000左右5个月,你要想着你每天如果不学点
 *      东西,其实就相当于你每天都在亏本。
 *  2. 不懂的地方一定要迎难直上搞懂为止
 *  3. 在你工作的第一年内一定要写博客,就像小编现在在做的这样! 因为知识只有当你把别人教会的时候,你才算真正的会了。如果你不能给别人讲清楚
 *     其实说明你自己也是似是而非,似懂非懂。这个道理是初中时候我一个好朋友告诉我的,实践告诉我这是真的! 不幸的是,当初告诉我的这个孩子,他
 *     疯了。
 *
 *
 * @author liuxin
 * @version Id: Text.java, v 0.1 2018/6/22 上午9:54
 */
public class Text {
}
